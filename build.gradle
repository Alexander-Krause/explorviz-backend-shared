// defining project properties
def	projectVersion = 'v1.3.0'
def projectURL= 'https://www.explorviz.net'
def footerText = '<span>Copyright 2013 - 2019</span> by the <a href="https://www.explorviz.net" target="_blank">ExplorViz project</a>'

subprojects {
	
	def isTravisBuild = Boolean.valueOf(System.getenv('TRAVIS'));
	isTravisBuild = isTravisBuild ? isTravisBuild : false;
	
	def travisBranch = String.valueOf(System.getenv('TRAVIS_BRANCH'));

	apply plugin: "java-library"
	apply plugin: "maven"

	// Force new Dependencies 
	configurations.all {
	  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}

    repositories {
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }    
    }
    
    dependencies {
    	// Logger
		implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'
		
		testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
		testImplementation 'org.junit.platform:junit-platform-runner:1.4.0'
		
    	testImplementation 'junit:junit:4.12'
	}
	
	// BEGIN Sonatype Snapshot publishing
	uploadArchives {
		repositories {
			mavenDeployer {
				def user = String.valueOf(System.getenv('SONATYPE_LOGIN'))
				def pw = String.valueOf(System.getenv('SONATYPE_PW'))
				
				repository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
					authentication(userName: user, password: pw)
				}
				pom.version = travisBranch
				pom.artifactId = project.name
				pom.groupId = "net.explorviz"
			}
    	}
	}
	// END Sonatype Snapshot publishing
}

// BEGIN aggregated Javadoc in multiproject Gradle build
def exportedProjects= [
		':common-concerns',
		':config-injection',
		':discovery-common',
		':exception-handling',
		':query',
		':security',
		':user'
]

task alljavadoc(type: Javadoc) {
    source exportedProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(exportedProjects.collect { project(it).sourceSets.main.compileClasspath })
    destinationDir = file("./docs")
    title = 'explorviz-backend-shared API ' + projectVersion
    options.setFooter(footerText)
}

// END aggregated Javadoc in multiproject Gradle build